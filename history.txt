# BarbeMCR's The Betrothed, a Python platformer built with pygame
# Copyright (C) 2023  BarbeMCR

+++++++++++++++++++++++++++++++++++++
HISTORY OF "BarbeMCR's THE BETROTHED"
+++++++++++++++++++++++++++++++++++++

Release 0.21 - The Experience Update
====================================
Build 10310
Python 3.11.2
Pygame 2.2.0
*Released on March 10th, 2023*
### Experience
- Added experience
  - You can check the current amount in the inventory
  - You can convert 15 EP to 1 XP by going into the 'Selection' tab in the inventory and selecting any weapon: an option to get XP will be in the list of actions possible
### Durability
- The durability system has been implemented
  - Each melee and magical weapon has a set durability (or power)
  - Each use of the weapon decreases by 1 said durability/power
  - When durability/power reaches 0, the player is prevented from further attacking with that weapon
  - Durability can be completely restored by repairing/refilling the weapon in the inventory
    - You can repair/refill the weapon at any point (unless its durability/power is already full)
    - Repairing/refilling the weapon consumes a set amount of XP (dependent on the weapon)
  - There are two ways of checking on a weapon's durability/power:
    - When selecting the weapon the inventory, the remaining durability/power and the maximum durability/power are shown in the weapon's statistics
    - If the weapon is the selected one (the one you attack with) a colored bar will appear below its icon in the overlay: it will become shorter with use
### Energy
- Now the player's energy is reset to 0 after death
- Filling the energy overflow bar no longer fully heals the player
  - Instead, each time the bar gets filled, the player automatically gets 1 XP
### Bugfixes
- The player can no longer turn around while attacking with a melee weapon
- The inventory cursor animation no longer seems to "skip" frames
- The crash screen now renders the cursor correctly
### Technical details
- All instances of `pygame.math.Vector2` have been replaced by `pygame.Vector2`
  - This should clean things up and `pygame.Vector2` is an alias for `pygame.math.Vector2` anyway

Release 0.20a - The Inventory Update
====================================
Build 10211
Python 3.11.2
Pygame 2.1.3.dev8
*Released on February 11th, 2023*
### Bugfixes
- The game no longer crashes on death due to missing part reference
- The cursor animation in the inventory now gets reset after deselecting an object
### Technical details
- Updated to pyinstaller 5.8.0

Release 0.20 - The Inventory Update
===================================
Build 10204
Python 3.11.1
Pygame 2.1.3.dev8
*Released on February 4th, 2023*
### Inventory
- Added an inventory system
  - All objects are divided in pages: currently there are only two ("Weapons" and "Selection")
  - You can move the cursor to select an object
    - Doing so will display its data
    - The cursor will be captured by a menu with several actions that can be performed on an object
    - Melee and magical weapons can be equipped or moved to the top of the inventory
    - Ranged weapons can also give 10 projectiles to the currently selected ranged weapon (if the projectiles are compatible
  - In selection you have more limited actions
    - You can still choose an object to display its data
    - Right now you cannot perform any action on selected objects
- The inventory is currently filled with many duplicate weapons to allow you to test the system
  - This "debug" inventory will be cleared in a future release
### Weapons
- Now the default melee weapon is the wooden knife
  - It has similar stats to the "old" iron knife
- Changed most statistics for the iron knife (check them in the inventory!)
- Added damage value entries for weapons at levels 2-5 (can't upgrade weapon level yet: that is coming soon!)
- Changed some weapon descriptions
### Settings
- Added an option to toggle VSync
- Added an option to change the maximum framerate between 20, 30, 50, 60 (the default), 90, 120 and 144 FPS or no limit
- Added an option to change the music volume between 0%, 10%, 25%, 50% (the default), 75% and 100%
- Added an option to toggle the fade in/out transition in levels
- The font used in the settings screen is now smaller
- Now a different cursor texture is used in the settings
- Slightly changed the options in the `controller` settings
### Enemies
- Now enemies have a `delta dead zone` to avoid them getting stuck on blocks (see implementation details below)
### Player
- Changed the idle texture so that it no longer includes the iron knife
### Background
- The settings/controls/pause menu background has been changed to a purple-lavander gradient (previously was a cyan-sky blue gradient)
- The stars in night levels now have a random position and are more likely to spawn higher in the sky than near the horizon
- The star pattern in night levels is now only drawn above the horizon
### Textboxes
- The textbox that appears when loading a savefile has been changed
  - Now the highest completed level is shown
  - The text warning about Arbitrary Code Execution has been shortened
### World
- The level selector is now 4 pixels lower
### Technical details
- Updated to Pyinstaller 5.7.0
- Now the `Game` class is reinitialized when quitting to the main menu from the game
- Increased the threshold for some elements affected by `Player.direction.y` from 1 to 3
- Reverted changes to enemy movement done in release 0.18a (removed `Level.flip_triggers` and `Enemy.about_to_flip`)
- Now enemies stop being affected by the delta when they are within 32 pixels of a border tile (in group `Level.border_sprites`). This implementation fixes the biggest drawback of having a `Level.flip_triggers` group: the fact those triggers needed to be placed manually in the level map. Some statistics are shown below
- Now `get_version` returns `unknown` if the version was not found (previously returned `DEV`)
- Increased compression on music assets
- Now some additional DLLs are packed with the compiled game to help increase compatibility
- Here are some statistics of the new enemy movement implementation (player walking speed is 360 pixels/second, or 6 pixels/frame@60fps; full player running speed is 720 pixels/second, or 12 pixels/frame@60fps):
  - at 12 fps (the lowest framerate at which the game runs correctly) allows enemy speeds of up to 720 pixels/seconds (12 pixels/frame@60fps)
  - at 15 fps allows enemy speeds of up to 900 pixels/second (15 pixels/frame@60fps)
  - at 20 fps (the lowest supported framerate) allows enemy speeds of up to 1260 pixels/second (21 pixels/frame@60fps)
  - at 60 fps (target framerate) allows enemy speeds of up to 3840 pixels/second (64 pixels/frame)
  - keep in mind that currently the fastest enemy (max speed zombie) moves at 480 pixels/second (8 pixels/frame@60fps)
- Now levels are in part 1 (previously were in part 0)
- The pre-built executable on Windows no longer uses UPX to increase compatibility

Release 0.19 - The Night Update
===============================
Build 1127
Python 3.11.0
Pygame 2.1.3.dev8
*Released on November 27th, 2022*
### Day-night cycle
- Now levels can be set in dawn, day, dusk or night
- Each of the four has its own background and palette (dawn and dusk share it, though)
- Now enemies deal damage differently depending on the time of day: at dawn they are the weakest, at dusk they have a slight damage buff, during the day they deal normal damage and at night they are the strongest
### Bugfixes
- Now enemies no longer get stuck on borders in some places

Release 0.18a - The Magical Update
==================================
Build 1121
Python 3.11.0
Pygame 2.1.3.dev8
*Released on November 21st, 2022*
### Bugfixes
- The player now spawns in the correct location: this bug, which existed since release 0.09, was caused by the `Player.collision_rect` being a few pixels smaller than the `Player.rect`, in an attempt of fixing a teleportation glitch
- The enemies no longer get caught on blocks. However, the way this bug has been fixed is not ideal (see implementation details below)
- Fixed some more collision glitches
- The cooldown for magical weapons now works correctly after pausing
### Technical details
- The enemies now have a new attribute `Enemy.about_to_flip` that gets set to `True` whenever the enemy collides with any sprite in the `Level.flip_triggers` group. When this happens, the speed of the enemy stops being affected by `delta`. There are two main problems with this implementation, though: the first one is that, while at high framerates this change appears seamless, at low framerates the enemies get slowed down substantially; the second one is that flip triggers must be put directly in the level data (so, no tiles mean no triggers). Right now, this seems like the best choice to do to avoid rewriting a sizeable chunk of tile creation code related to enemies.

Release 0.18 - The Magical Update
=================================
Build 1120
Python 3.11.0
Pygame 2.1.3.dev8
*Released on November 20th, 2022*
### Weapons
- Added magical weapons: they work similarly to ranged weapons, but they can perform actions whenever one of their projectiles hits an enemy
- Each time a magical weapon fires it consumes a certain amount of energy
- Added the Starter Staff: a decent magical weapon that deals 1 Magical Damage, has a cooldown of 0.5 seconds and has a cost of 1 Energy Point per use. It also creates a new projectile when it hits an enemy and heals the player 0.05 Health Point per level whenever it kills an enemy
- Added durability (for melee weapons) and power (for magical weapons): it doesn't work yet, though!
### Enemies
- Now enemies can have magical resistance
- Zombies now have Magical Resistance I
### UI
- Added the magical weapon overlay: it is displayed next to the ranged weapon overlay
- Now below the melee weapon and the magical weapon, their durability and power is displayed respectively
### Stamina
- The stamina bar color has been changed from white to light green
### Running
- Now running decreases the amount of damage received by the player when hitting enemies, up to 50% less damage, depending on the speed
### Levels
- Moved the barriers in all levels to avoid even more teleportation glitches after spawning
### Splashes
- From now on, the changelog will not include changes to splashes, as they are added more or less every version. In this release 4 new splashes were added
### Bugfixes
- Now the game no longer crashes while trying to load savefiles with less entries than the current ones (such as before upgrading savefiles between versions)
### Technical details
- Projectiles are now spawned centered
- Simplified `Player._reset_speed`, so that it is no longer dependent on events
- Added `Weapon.description` for future use
- Now the savefile version check happens in `Game._get_savefile_version`, no longer in `Game._load`, to avoid crashes whenever there is a mismatched entry

Release 0.17 - The Run Update
=============================
Build 1113
Python 3.11.0
Pygame 2.1.3.dev8
*Released on November 13th, 2022*
### Running
- Now the player can run for a substantial speed boost: you can change your speed by pressing the right trigger of your controller alongside the left/right D-Pad button, up to 2x speed with the trigger fully pushed in. On the keyboard, you can press both A/D and the Left CTRL for a 1.5x speed boost or the Left CTRL and the Left ALT for a 2x speed boost
### Stamina
- Added stamina: the player can't run if their stamina bar is empty
- Now the stamina bar gets depleted if the player runs
- Now the stamina bar slowly increases if the player is not running (walking will make it increase more slowly than idlingm though)
### Delta
- Now the delta is passed to a variety of things, so that the core gameplay works decently even at very low framerates (delta stops working as expected at around 10-12 fps), and the game is smoother than ever at high framerates
- Increased the delta cap to 0.08 seconds between frames (previously was 0.03): this causes the game to run fine even at framerates as low as 12 fps (lower than that it would risk breaking the physics engine)
### Main menu
- Changed the main menu background (much better, in my opinion)
- Changed the text color for the options to white (previously was gray)
### Levels
- Removed the top layer of barriers in all levels: turns out it was the cause of some teleportation glitches
- Changed the spawn point of Chapter I-B to avoid an occasional teleportation glitch immediately after spawning in the player
### Overlay
- Now the overlay gets toggled using the `backslash` key, instead of the left `ctrl`
### World
- The level selector now moves at a speed of 12 pixels per frame (previously was 6): unfortunately, we cannot easily apply the delta here as there would be strange collision glitches between the level selector and the level icons
### Technical details
- Removed LGTM comments (Rest In Peace LGTM!): a Github Action workflow will be used from now on to lint all the Python files in the repository
- Cleaned up `versions.py` as development versions are not public
## Known issues
- Now that delta gets passed to many objects, the game is more prone to breaking the physics engine at low framerates: you'll probably see more teleportation glitches when running at 20 fps than when running at 60 fps. However, this can't be easily fixed and will probably stay that way forever. It's just the price to pay for framerate independency!

Release 0.16 - The Enemy Update
===============================
Build 1106
Python 3.11.0
Pygame 2.1.3.dev8
*Released on November 6th, 2022*
### Enemies
- Added Melee and Ranged Resistance to enemies: in certain types of enemies, they are present and reduce the amount of damage received by the enemies when using the respective weapon types. Each level of resistance reduces damage by 20%, with level 5 being immunity. For example, zombies, who have Ranged Resistance I, will be dealt 20% less damage from ranged weapons
- Added zombies: they have 2 HP and deal 2 Physical Damage. They also have Ranged Resistance I
- Now stomping on an enemy can (in 25% of the cases) deal 1/10 of the normal damage (however, it deals Pure Damage). Previously it dealt 1/4 of the normal damage (way too much)
- The enemy invulnerability has been slightly reduced to avoid spamming: now the default stun duration ranges between 400 and 500 milliseconds (previously was 750). The stun duration with slower weapons (which have not yet been introduced) has been affected as well, although it is pretty complex to explain
### Health
- Now fractional damage can be applied to the player: in order to get the actual health value, you must put together a number that has for integer part the value displayed next to the health bar and for decimal part the value displayed next to the health remainder bar
### UI
- Now you can toggle the overlay between the default one and a minimal one (with only the health bar shown): this is especially useful when traveling from right to left, like when exiting one-way caves
- Now the health remainder is displayed below the energy bar
### Camera
- Now the camera starts moving when the player gets past two fifths of the screen width from each window border (in other words, the camera does not move when the player is in the central fifth of the screen)
### Levels
- Slightly tweaked a few levels to reduce the occurance of a stubborn teleporation bug
### Textboxes
- Now key presses will be repeated every 50 milliseconds after 0.5 seconds of holding them down
- Now the controller `A` or `Cross` button can be pressed to confirm the input
### Terrain
- Now only the outermost layer of terrain tiles is checked for player collisions: this saves quite a bit of time each frame, especially in levels where there are huge extensions of terrain (like Chapter I-A)
### Controls
- The controls screen has been revamped: now the font is smaller, the lines are closer together, the `Back` button has been moved to the bottom right corner and the controls are described more in-depth
### Mouse
- Now the mouse cursor is hidden when hovering over the game window
### Splashes
- Added 4 new splashes
- Changed 2 splashes
### Bugfixes
- Now timers work correctly when pausing and resuming
- The player no longer slides back when melee attacking while facing left
- The player now takes the correct amount of damage when stomping
### Technical details
- Updated to Pyinstaller 5.6.2
- The game is no longer capped at 60 FPS (thanks to `delta`!)
- Now `FlintArrows.__init__` initializes its parent object through `RangedProjectilePack.__init__`
- Now the collision between the player and the enemies is checked using the `Player.collision_rect` instead of the `Player.rect`
- Now the code to get whether the player is melee attacking is run before the animation code to avoid single-frame blitting inconsistencies
- Now `Level.check_enemy_collisions` uses the `Player.collision_rect.bottom` instead of the `Player.rect.bottom`
- Now `Game.load` no longer stores an unnecessary local variable `savefile_version` after upgrading
- Now the `Player.player_hurt_sfx` plays regardless of the type of damage
- The Pixel Madness embedded font has been updated to version 2.0: more latin glyphs and a few updated ones in this release

Release 0.15 - The Ranged Update
================================
Build 829
Python 3.10.6
Pygame 2.1.2
*Released on August 29th, 2022*
### Weapons
- Added ranged weapons: unlike melee attacks, the player doesn't stop moving horizontally when attacking
- Ranged weapons cannot fire infinitely: instead, they can fire up to 50 times (for now)
- However, ranged weapons have a much higher range of attack than melee weapons
- The enemies now get stunned for the cooldown time of the ranged weapon used
- Added the Makeshift Bow: a decent ranged weapon that deals 1 Ranged Damage, has a cooldown of 0.3 seconds and uses Flint Arrows
- Added weapon levels (at least technically: no weapon upgrade system... yet!)
- Weapons now store their damage values in a dictionary to allow for a future weapon level system implementation
### UI
- Added the ranged weapon overlay: it is displayed next to the melee weapon overlay
### Player
- The player can now make ranged attacks (see how in the Controls section of the README)
### World
- Now the code to change parts and subparts has been implemented: it is not possible to switch between parts manually and you can only go to previous subparts (and not get back to where you were without completing at least the last level of each subpart), so make sure you think carefully about it first
- The `World` class in `world.py` no longer accepts the `first_level` argument, which has been completely removed
### Savefile
- Now the game automatically upgrades savefiles to the latest version
- Now the game autosaves each time a level is completed to avoid losing progress
- Now the game accepts empty savefile names: it is useful if you want to avoid creating a savefile when starting a new game
### Window
- Now the window title has been changed to `BarbeMCR's The Betrothed` to reflect the change of name in the official documentation (the same thing is now also true for the heading of `history.txt`)
### Enemies
- Now enemies get stunned after being hit by a melee weapon attack for the duration of the melee weapon cooldown (and an additional 250 milliseconds if the cooldown is less than 750 milliseconds)
- Now enemies get stunned for at least 750 milliseconds
### Delta
- A delta cap has been implemented to avoid sudden movement when lag spikes occur: this delta cap takes effect when the game is running slower than around 35 FPS
### UI
- Now the quantity of energy present in the energy overflow bar is displayed
- The energy overflow bar has been moved: it is now placed below the energy bar (in the right side)
### Splashes
- Added 12 new splashes
### Bugfixes
- The game now resets the path to the savefile after deleting one to avoid accidentally rewriting to it
- Background object no longer move erraticaly when some lag is present
### Technical details
- Changed the savefile loading algorithm to use a new `Game._load` method for the actual loading part to allow for a correct upgrading procedure
- Removed redundant code in file `player.py`, in class `Player`, in method `take_damage`
- In `./assets/level/ground/ground_day.png` and `./assets/level/ground/bg_day.png` color #000000 has been replaced with color #010101 to avoid side effects when transforming the image (might be useful in future in-game, right now this reduces the amount of work I have to do in external tools)
- Now the dictionary `versions` in `versions.py` has its entries listed backwards to facilitate reading it (also, key `7122` with value `0.12-build712(2)` was removed as it doesn't and didn't serve any particular purpose)

Release 0.14b - The Delta Update
================================
Build 808.1
Python 3.10.6
Pygame 2.1.2
*Released on August 8th, 2022*
### Updates
- The game no longer notifies updates and downloads them if they have already been downloaded

Release 0.14a - The Delta Update
================================
Build 808
Python 3.10.6
Pygame 2.1.2
*Released on August 8th, 2022*
### Updates
- Now the game downloads the appropriate version for your platform: on Windows 8.1, 10 and 11 the behavior will be the same as in 0.14 (it will download the latest Python version); on Windows Vista, 7 and 8 it will download the Python 3.8 version; on macOS, Linux, UNIX or other platform (and if the Windows version can't be detected) it will download the source code package

Release 0.14 - The Delta Update
===============================
Build 807
Python 3.10.6
Pygame 2.1.2
*Released on August 7th, 2022*
### Delta
- Added a delta time calculation to `self.scroll_x` in `level.py` that propagates from `main.py`
- Now the game simulates 60 FPS even if it doesn't run at 60 FPS: this allows for a smoother gameplay experience
### Updates
- Now the game automatically tries to check for updates: if it fails to do so, it will silently continue startup
- Now the game displays a message for a few seconds if an update is found
- Now the game automatically downloads the update and saves it to './data' if autoupdate is enabled (by default it is not)
### Settings
- Now autodownload can be toggled in the settings
### Crash screen
- Added an option to save a crash report to './data/reports'
- Now a timestamp is saved with the crash report
- Now a randomly chosen Minecraft-style witty comment is put at the beginning of the crash report

Release 0.13 - The Miscellaneous Update
=======================================
Build 805
Python 3.10.6
Pygame 2.1.2
*Released on August 5th, 2022*
### Enemies
- Now enemies drop EPs: skeletons drop up to 3 EP
- Added enemy toughness: 50% of enemies have this trait
- Enemies can now have up to 2 toughness points
- Each toughness point now gives enemies 1 extra HP and 0.5 extra damage
- Enemies with toughness now give 1 extra EP for every toughness point
- Now enemies drop a third of the normal amount of EP when repeating a level or immediately after loading from a savefile
- Now enemies can't move for 0.5 seconds after being hit
### Player
- The player global variables now get stored in a dictionary to support multiple characters (not yet implemented)
- The player now gets healed by 5 HP after finishing a new level (previously was 10)
### Savefile
- Now a checksum is saved (and verified when loading) along the savefile to avoid dangerous Arbitrary Code Execution (ACE)
- Now a warning is displayed before loading a savefile
- Now the game gets saved when quitting with the 'X' in the window controls
- Now a confirmation gets displayed after deleting a savefile from the settings
### Screenshots
- Now screenshots can be taken and will be saved to './data/screenshots/'
### Level
- Now smaller and bigger version of the clouds can occasionally appear
### Crash screen
- Now playback of sounds will be stopped after crashing (previously only the music was stopped)
- Now the traceback is no longer limited to 8 entries
- Now the timer before input is 1000 milliseconds long (previously was 250)
### Splashes
- Added 4 new splashes
### Technical details
- Now the RNG state gets saved with the savefile
- Now the game no longer saves if the path to save to is an empty string
- `font.ttf` has been updated to version 1.2
### Pyinstaller
- Updated to Pyinstaller 5.3
### Bugfixes
- The input timer now works correctly in the crash screen

Release 0.12 - The Save Update
==============================
Build 713
Python 3.10.5
Pygame 2.1.2
*Released on July 13th, 2022*
### Savefile
- Added save and load features: they keep global variables, NOT the game state
- Now the player is asked to write an alphanumeric file name to save to or load from
- Added an option to continue from a savefile
- Added options to save the game and save and quit to title to the pause menu
### Settings
- Added settings screen
- Added controller settings
- Added a reset settings option
- Added an option to delete a savefile
### Crash screen
- Added the crash screen: it displays the traceback of the crash
- Added options to save and quit and quit without saving
### Controller
- Added support for DualShock 4 and Nintendo Switch Pro Controller via the new settings interface
### Splashes
- Added 4 new splashes
### Technical details
- Deleted the `save` argument from `create_main_menu` in `game.py`
### Pyinstaller
- Updated to Pyinstaller 5.2

Release 0.11a - The Menu Update
===============================
Build 705
Python 3.10.5
Pygame 2.1.2
*Released on July 5th, 2022*
### Menus
- Now the progress gets completely reset after going back to the main menu
### Technical details
- Added an optional `save` argument to `create_main_menu` in `game.py` for future use
### Bugfixes
- The game no longer crashes on startup with a `FileNotFoundError` exception due to missing `splashes.txt`
- The game no longer crashes after resuming

Release 0.11 - The Menu Update
==============================
Build 623
Python 3.10.5
Pygame 2.1.2
*Released on June 23rd, 2022*
### Menus
- Added the main menu: it allows you to create a new game, open the quick controls cheat sheet, quit the game and soon it will allow you to change the settings
- Added splashes: one of them (for now they are 16) is randomly displayed in the main menu
- Added the quick controls cheat sheet: it displays the most useful controls
- Added the pause menu: it allows you to resume the game or quit to the title screen
### Audio
- Added SFXs for pausing and resuming the game
### Controller
- Now it vibrates after melee-attacking and pausing or resuming the game
### Camera
- Added a fade in effect: it lasts about 2 seconds
- Added a fade out effect: it lasts about 1 second
### Bugfixes
- The melee weapon rect is now placed correctly
- Fixed potential undefined behavior when calling `ctypes.windll.user32.SetProcessDPIAware()` on Windows 8.1 and later versions
- Now the game calls `ctypes.windll.shcore.SetProcessDpiAwareness(2)` when running on Windows 8.1 or later

Release 0.10 - The Melee Update
===============================
Build 617
Python 3.10.5
Pygame 2.1.2
*Released on June 17th, 2022*
### Weapons
- Added melee attacks
- The player now stops when melee attacking
- Added the Iron Knife: a short-ranged melee weapon that deals 1 Physical Damage and stays for 0.4 seconds
### UI
- Added the melee weapon overlay: it is displayed in the lower left corner of the screen
### Player
- The player can now make melee attacks (see how in the Controls section of the README)
- Prepared character switching
- Now the player assets are divided into characters
- Now the sound assets are compressed with Vorbis (OGG) (previously they were uncompressed WAVs)
### Camera
- The camera now starts scrolling when the player is in the farthest thirds of the screen (previously it started when the player was is in the farthest quarters)

Release 0.09a - The Sound Update
================================
Build 611.1
Python 3.10.5
Pygame 2.1.2
*Released on June 11th, 2022*
- Changed the level layout for Chapter II-C
### Bugfixes:
- The title no longer says "Build 611"

Release 0.09 - The Sound Update
===============================
Build 611
Python 3.10.5
Pygame 2.1.2
*Released on June 11th, 2022*
- Added the first musical track for Chapter I and II: "Magnolie"
- The music fades in during a period of 2 seconds
- Added musical themes for completing a level and dying from loss of health
- Added SFXs for enemy hurts and deaths, player hurts and deaths, jumping, picking up energy and selecting stuff in the menu (only plays when changing a level in the level selection screen for now)
- Added Chapter II (Section C)
- The player can no longer press SPACE or A to jump continously
- Now the player stays in the level after falling into the void
- The player is now spawned at the top of the screen after falling into the void
- Now the player must travel 3 screens downwards before being teleported back up
- The player collision box has been separated from the sprite
- The player collision box width is now 4 pixels smaller and 4 pixels shorter
- Changed the collision handling to be more reliable
- A lot of unnecessary code has been removed
- Added a timer of 0.25 seconds on the level selection screen to allow for it to be actually displayed before starting a level
- Now the player becomes invincible for 0.25 seconds after stomping an enemy
- Now the possible damage the player can get after stomping an enemy is a quarter of the normal damage dealt (previously was half)
- Now if the player gets damaged after stomping the enemy they are dealt Pure Damage (previously was Physical Damage)
- Simplified the player input timer handling
- Added Nintendo Switch Pro mappings (accessible by changing the same attribute used to set the mappings to DualShock 4 to 'switch_pro')
- Switched from a method-passing approach to a class-passing approach in the linking logic between parent and child classes in 'game.py'
- Added a new build ID for identifying builds made the same day
- Removed 'from data import *' in 'main.py'
- Suppressed some star-imports recommendations from LGTM
### Bugfixes:
- The game no longer crashes after plugging in a controller

Release 0.08a - The Energy Update
=================================
Build 605
Python 3.10.4
Pygame 2.1.2
*Released on June 5th, 2022*
- Implemented the 'if __name__ == '__main__'' idiom
- Now the game loop in 'main.py' runs inside a 'main()' function
### Bugfixes:
- The game no longer crashes on startup because of missing 'self.current_subpart' attribute

Release 0.08 - The Energy Update
================================
Build 604
Python 3.10.4
Pygame 2.1.2
*Released on June 4th, 2022*
- Added energy: Renzo starts the game with 0 EP (Energy Points) and can hold up to 100 EP
- Added the energy bar and the energy statistics: they are displayed in the top left corner of the screen
- Now when the energy bar is full, the energy overflow will start filling
- Added energy overflow: Renzo starts the game with 0 EP in the overflow energy bar and can hold up to 25 EP there
- Added the energy overflow bar: it is displayed below the energy bar
- Now when the overflow bar is full, the player is completely healed and the overflow bar is decreased by 25 EP.
- Now the overflow bar resets to 0 EP after the energy bar drops below 90% of its maximum EP.
- Now picking up an energy item increases the player energy by 2 EP for every blue energy, 5 EP for every red energy, 10 EP for every yellow energy and 20 EP for every green energy
- Now falling into the void decreases the player energy by a random amount between 1 and 25 points
- Added red energy, yellow energy and green energy items
- Now energy only generates in new levels
- Now the player gets healed only if the completed level is the highest they can select
- Now dying decreases the energy by 50%
- Now dying resets the energy overflow
- Added Chapter II (Section B)
- Added fences and fence gates
- Rearranged the levels in part 0, subpart 0
- The parts are now divided into subparts
- Changed the name of the 'windows' layer to 'decoration'

Release 0.07b - The Health Update
=================================
Build 603
Python 3.10.4
Pygame 2.1.2
*Released on June 3rd, 2022*
### Bugfixes:
- The player is now healed by 10 HP after completing a level (previously they were healed completely due to a bug)

Release 0.07a - The Health Update
=================================
Build 603
Python 3.10.4
Pygame 2.1.2
*Released on June 3rd, 2022*
- Now pure damage is dealt even if the player is invincible
- Now pure damage doesn't trigger the invincibility frames
- Now the player is healed by 10 HP after completing a level

Release 0.07 - The Health Update
================================
Build 602
Python 3.10.4
Pygame 2.1.2
*Released on June 2nd, 2022*
- Added health: Renzo starts the game with 20 HP (Health Points)
- Added the health bar and the health statistics: they are displayed in the top left corner of the screen
- Added death: if the player's health drops to 0, they will die and all their progress will be lost
- Now falling into the void deals 5 Pure Damage after respawning (the distinction between the types of damage has not been yet implemented)
- Skeletons now have 1 HP and deal 1 Physical Damage
- Now falling onto enemies deals 1 Physical Damage to them
- Now crushing an enemy has a 25% chance of dealing half of the enemy Physical Damage to you, rounded down (you will not notice any change in the skeleton behavior, though)
- Now touching an enemy from the left, from the right, from the bottom or from the top (when not falling onto it) deals the player some Physical Damage
- Enemies now spawn particles when they die
- Added Chapter II (Section A)
- Added caves: they can be found in some levels and yield a lot of treasures, like energy (to be implemented)
- Added background blocks in caves (be careful!)
- Added generic windows
- Added a loading screen
- Added DualShock 4 controller mappings (for now they can be used only by changing the 'self.gamepad' attribute in the 'Player' class in 'player.py' in the source code to 'ps4')
- The world is now divided into parts
- The horizon height is now independent for each level
- The horizon height for Chapter I-B is now 6 tiles (previously was 7)
- The level pointer now is placed automatically on the next level on completion of the level
- Lowered the levels in the level selection screen by 20 pixels
- Enemies are now spawned from id '1' to allow for more enemies to be added (previously was '0')
- The level selection screen graphics has been darkened
- The game now tries to use VSync when available
- Updated the embedded font to version 1.1
- Updated to Pyinstaller 5.1
### Bugfixes:
- The game no longer crashes on startup because of 'ModuleNotFoundError: No module named ctypes.windll' on non-Windows platforms
- The shebang is now placed in the correct location
- The game no longer crashes if a level does not generate water or mountains
- The game no longer hangs up when loading a level

Release 0.06 - The Fancy World Update
=====================================
Build 515
Python 3.10.4
Pygame 2.1.2
*Released on May 15th, 2022*
- Now the player can be controlled for 1 second after running into the wooden cross
- The player no longer freezes after running into the wooden cross due to the new behavior
- Updated the door texture
- Added graphics to the level selection screen
- Added Xbox One / Xbox Series X|S controller support and mapping
- Added controller hotplugging
- Added controllers mappings in settings.py
- Added a new 'first_level' argument to the world builder for setting the first available level
- Added a shebang line at the beginning of main.py
- Added the level selection menu background
- Now events are pulled in the Game class (previously they were pulled in the main loop)
- Now the locked levels in the level selection screen are completely filled with black
- Now you can make the game fullscreen (look in the README.MD file in the repository for the new controls section)
### Bugfixes:
- The player no longer clips through the barriers surrounding the level when buffering input

Release 0.05a - The World Update
================================
Build 506
Python 3.10.4
Pygame 2.1.2
*Released on May 6th, 2022*
### Bugfixes:
- The title no longer says 'Build 506'

Release 0.05 - The World Update
===============================
Build 506
Python 3.10.4
Pygame 2.1.2
*Released on May 6th, 2022*
- Overhauled the way the game is handled
- Documented files, classes and functions
- Added a level selection screen: no graphics yet!
- A level is now blocked until the previous one is completed
- Falling below the level now counts as dying
- Running into the wooden cross now counts as completing the level
- Added Chapter I (section B)
- Added roots, bricks, rose windows, stained windows, doors and rooftops
- Added some (inaccessible) blocks to hide the end of the level
- The base level size has been increased to 72 because of the above change (previously was 62)
- The clouds now move: the speed at which they move and how frequently they do are randomly generated
- The background now scrolls three times as slowly (previously was twice as slow)
- The hitbox of enemies has been increased
- Skeletons now have an offset of 64 pixels (previously was 63)
- Updated to Pyinstaller 5.0.1
### Bugfixes:
- The player can no longer hold SPACE to stick to the ceiling

Release 0.04 - The Level Update
===============================
Build 306
Python 3.10.2
Pygame 2.1.2
*Released on March 6th, 2022*
- Completely overhauled the code, the level and the graphics
- Changed tile_size to be 64 pixels (previously was 32)
- Added Chapter I (section A)
- Made the game window 1280 x 704
- Made the game process DPI aware on Windows
- Added dirt, grass, pebbled dirt, stone and stone bricks
- Added grass tips
- Added trees: the height of the roots is randomly generated
- Added skeletons: the speed is randomly generated
- Added the energy item
- Added water
- Added the sky
- Added clouds: the number and the positions are randomly generated
- Added mountains: the height is randomly generated
- Added a wooden cross at the end of the level
- The background now scrolls twice as slowly
- Added an invisible barrier at each end of the level and on top of it
- Updated to Pyinstaller 4.10

Release 0.03 - The Particle Update
==================================
Build 212
Python 3.10.2
Pygame 2.1.2
*Released on February 12th, 2022*
- Added run, jump and fall particles
- Changed the level tile color to be gray instead of white
- Updated to Pyinstaller 4.9

Release 0.02 - The Animation Update
===================================
Build 205
Python 3.10.2
Pygame 2.1.2
*Released on February 5th, 2022*
- Added Renzo Tramaglino (the player character) and his animations
- Enhanced the collision checks
- The player can now only jump once
- The placeholder level has been slightly modified
- Updated to Pyinstaller 4.8

Release 0.01 - The Original Update
==================================
Build 101
Python 3.10.1
Pygame 2.1.2
*Released on January 1st, 2022*
- Initial release
- Horizontal scrolling
- Collision detection
- Placeholder map
