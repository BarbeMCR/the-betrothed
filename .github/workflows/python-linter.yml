# This workflow lints the game with Python 3.8+ on different versions of Ubuntu, Windows and macOS on both x86 and x64 architectures.

name: Python Linter

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-ubuntu:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [ubuntu-20.04, ubuntu-22.04]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        architecture: ['x86', 'x64']
    name: ubuntu ${{ matrix.os-version }}, Py ${{ matrix.python-version }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture}}
      - name: Upgrade pip, setuptools and wheel
        run: python -m pip install pip setuptools wheel --upgrade
      - name: Install flake8
        run: python -m pip install flake8
      - name: Install pygame
        run: python -m pip install pygame numpy
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build-windows:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [windows-2019, windows-2022]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        architecture: ['x86', 'x64']
    name: win ${{ matrix.os-version }}, Py ${{ matrix.python-version }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Upgrade pip, setuptools and wheel
        run: python -m pip install pip setuptools wheel --upgrade
      - name: Install flake8
        run: python -m pip install flake8
      - name: Install pygame
        run: python -m pip install pygame numpy
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build-macos:
    runs-on: ${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [macos-11, macos-12]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        architecture: ['x86', 'x64']
    name: macos ${{ matrix.os-version }}, Py ${{ matrix.python-version }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Upgrade pip, setuptools and wheel
        run: python -m pip install pip setuptools wheel --upgrade
      - name: Install flake8
        run: python -m pip install flake8
      - name: Install pygame
        run: python -m pip install pygame numpy
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
